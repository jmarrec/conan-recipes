Subject: openstudio_specific-3.3.0

Add rb_hasFile and rb_require_embedded so we can embedded gems

diff --git a/lib/mkmf.rb b/lib/mkmf.rb
--- lib/mkmf.rb
+++ lib/mkmf.rb
@@ -2843,7 +2843,21 @@ MESSAGE
   ##
   # A C main function which does no work
 
-  MAIN_DOES_NOTHING = config_string('MAIN_DOES_NOTHING') || "int main(int argc, char **argv)\n{\n  return !!argv[argc];\n}"
+  MAIN_DOES_NOTHING = config_string('MAIN_DOES_NOTHING') || <<-SRC
+int main(int argc, char **argv)
+{
+  return !!argv[argc];
+}
+
+int rb_hasFile(const char *t_filename) {
+  return 0;
+}
+
+int rb_require_embedded(const char *t_filename) {
+  return 0;
+}
+SRC
+
   UNIVERSAL_INTS = config_string('UNIVERSAL_INTS') {|s| Shellwords.shellwords(s)} ||
     %w[int short long long\ long]
 
diff --git a/lib/rubygems/util.rb b/lib/rubygems/util.rb
--- lib/rubygems/util.rb
+++ lib/rubygems/util.rb
@@ -101,7 +101,9 @@ module Gem::Util
   # returning absolute paths to the matching files.
 
   def self.glob_files_in_dir(glob, base_path)
+    # TODO: Below (USED TO?) fails on windows. Throws invalid argument
     Dir.glob(glob, base: base_path).map! {|f| File.expand_path(f, base_path) }
+    # Dir.glob(File.expand_path(glob, base_path))
   end
 
   ##
diff --git a/load.c b/load.c
--- load.c
+++ load.c
@@ -19,6 +19,9 @@
 #include "ruby/encoding.h"
 #include "ruby/util.h"
 
+int rb_hasFile(const char* t_filename);
+int rb_require_embedded(const char* t_filename);
+
 static VALUE ruby_dln_libmap;
 
 #define IS_RBEXT(e) (strcmp((e), ".rb") == 0)
@@ -1395,7 +1398,11 @@ rb_require(const char *fname)
 {
     struct RString fake;
     VALUE str = rb_setup_fake_str(&fake, fname, strlen(fname), 0);
+  if ( rb_hasFile(fname) ) {
+    return rb_require_embedded(fname);
+  } else {
     return rb_require_string_internal(str, true);
+  }
 }
 
 static int
diff --git a/main.c b/main.c
--- main.c
+++ main.c
@@ -57,3 +57,11 @@ main(int argc, char **argv)
     ruby_sysinit(&argc, &argv);
     return rb_main(argc, argv);
 }
+
+int rb_hasFile(const char *t_filename) {
+  return 0;
+}
+
+int rb_require_embedded(const char *t_filename) {
+  return 0;
+}
diff --git a/win32/Makefile.sub b/win32/Makefile.sub
--- win32/Makefile.sub
+++ win32/Makefile.sub
@@ -1206,7 +1206,7 @@ $(LIBRUBY_SO):	$(LIBRUBY_A) $(DLDOBJS) $(RUBYDEF) $(RUBY_SO_NAME).res
 		@-$(PRE_LIBRUBY_UPDATE)
 !endif
 		$(ECHO) linking shared-library $(@:\=/)
-		$(Q) $(LDSHARED) $(DLDOBJS) $(LIBRUBY_A) \
+		$(Q) $(LDSHARED) $(MAINOBJ) $(DLDOBJS) $(LIBRUBY_A) \
 			$(RUBY_SO_NAME).res $(SOLIBS) $(EXTSOLIBS) $(LIBS) -Fe$@ -link $(LDFLAGS) \
 			$(LIBRUBY_DLDFLAGS)
 		@$(RM) dummy.lib dummy.exp
diff --git lib/rubygems.rb lib/rubygems.rb
--- lib/rubygems.rb
+++ lib/rubygems.rb
@@ -1296,23 +1296,24 @@ An Array (#{env.inspect}) was passed in from #{caller[3]}
 
   MARSHAL_SPEC_DIR = "quick/Marshal.#{Gem.marshal_version}/".freeze
 
-  autoload :ConfigFile,         File.expand_path("rubygems/config_file", __dir__)
-  autoload :CIDetector,         File.expand_path("rubygems/ci_detector", __dir__)
-  autoload :Dependency,         File.expand_path("rubygems/dependency", __dir__)
-  autoload :DependencyList,     File.expand_path("rubygems/dependency_list", __dir__)
-  autoload :Installer,          File.expand_path("rubygems/installer", __dir__)
-  autoload :Licenses,           File.expand_path("rubygems/util/licenses", __dir__)
-  autoload :NameTuple,          File.expand_path("rubygems/name_tuple", __dir__)
-  autoload :PathSupport,        File.expand_path("rubygems/path_support", __dir__)
-  autoload :RequestSet,         File.expand_path("rubygems/request_set", __dir__)
-  autoload :Requirement,        File.expand_path("rubygems/requirement", __dir__)
-  autoload :Resolver,           File.expand_path("rubygems/resolver", __dir__)
-  autoload :Source,             File.expand_path("rubygems/source", __dir__)
-  autoload :SourceList,         File.expand_path("rubygems/source_list", __dir__)
-  autoload :SpecFetcher,        File.expand_path("rubygems/spec_fetcher", __dir__)
-  autoload :SpecificationPolicy, File.expand_path("rubygems/specification_policy", __dir__)
-  autoload :Util,               File.expand_path("rubygems/util", __dir__)
-  autoload :Version,            File.expand_path("rubygems/version", __dir__)
+  require 'rubygems/config_file'              # autoload :ConfigFile
+  require 'rubygems/ci_detector'              # autoload :CIDetector
+  require 'rubygems/dependency'               # autoload :Dependency
+  require 'rubygems/dependency_list'          # autoload :DependencyList
+  require 'rubygems/installer'                # autoload :Installer
+  require 'rubygems/util/licenses'            # autoload :Licenses
+  require 'rubygems/name_tuple'               # autoload :NameTuple
+  require 'rubygems/path_support'             # autoload :PathSupport
+  require 'rubygems/platform'                 # --- Added
+  require 'rubygems/requirement'              # autoload :Requirement
+  require 'rubygems/request_set'              # autoload :RequestSet -- reordered after requirement
+  require 'rubygems/resolver'                 # autoload :Resolver
+  require 'rubygems/source'                   # autoload :Source
+  require 'rubygems/source_list'              # autoload :SourceList
+  require 'rubygems/spec_fetcher'             # autoload :SpecFetcher
+  require 'rubygems/specification_policy'     # autoload :SpecificationPolicy
+  require 'rubygems/util'                     # autoload :Util
+  require 'rubygems/version'                  # autoload :Version
 end
 
 require_relative "rubygems/exceptions"
diff --git lib/rubygems/openssl.rb lib/rubygems/openssl.rb
--- lib/rubygems/openssl.rb
+++ lib/rubygems/openssl.rb
@@ -1,6 +1,6 @@
 # frozen_string_literal: true
 
-autoload :OpenSSL, "openssl"
+require 'openssl'           # autoload :OpenSSL
 
 module Gem
   HAVE_OPENSSL = defined? OpenSSL::SSL # :nodoc:
diff --git lib/bundler/vendor/net-http-persistent/lib/net/http/persistent.rb lib/bundler/vendor/net-http-persistent/lib/net/http/persistent.rb
--- lib/bundler/vendor/net-http-persistent/lib/net/http/persistent.rb
+++ lib/bundler/vendor/net-http-persistent/lib/net/http/persistent.rb
@@ -3,7 +3,7 @@ require_relative '../../../../uri/lib/uri'
 require 'cgi' # for escaping
 require_relative '../../../../connection_pool/lib/connection_pool'
 
-autoload :OpenSSL, 'openssl'
+require 'openssl'           # autoload :OpenSSL
 
 ##
 # Persistent connections for Gem::Net::HTTP
diff --git lib/net/http.rb lib/net/http.rb
index 34ca0669..87a2a786 100644
--- lib/net/http.rb
+++ lib/net/http.rb
@@ -23,7 +23,7 @@
 require 'net/protocol'
 require 'uri'
 require 'resolv'
-autoload :OpenSSL, 'openssl'
+require 'openssl'           # autoload :OpenSSL
 
 module Net   #:nodoc:
 
diff --git lib/rubygems/net-http/lib/net/http.rb lib/rubygems/net-http/lib/net/http.rb
--- lib/rubygems/net-http/lib/net/http.rb
+++ lib/rubygems/net-http/lib/net/http.rb
@@ -23,7 +23,7 @@
 require_relative '../../../net-protocol/lib/net/protocol'
 require 'uri'
 require_relative '../../../resolv/lib/resolv'
-autoload :OpenSSL, 'openssl'
+require 'openssl'           # autoload :OpenSSL
 
 module Gem::Net   #:nodoc:
 
